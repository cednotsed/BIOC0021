corrs <- c(corrs, corr)
}
t.test(corrs, mu=0, alternative = "two.sided")
test <- c(0.01, 0.04, 0.001, 0.03, 0.002, 0.05, 0.1)
test2 <- c(0.1, 0.4, -0.1, -0.5, -0.3, -0.3, -0.4)
df <- data.frame(test, test2)
corrs <- c()
for (i in seq(1, 100)) {
temp <- sample(seq(1, nrow(df)), replace = T)
temp_df <- df[temp, ]
corr <- cor(temp_df[, 1], temp_df[, 2])
corrs <- c(corrs, corr)
}
t.test(corrs, mu=0, alternative = "two.sided")
test <- c(0.01, 0.04, 0.001, 0.03, 0.002, 0.05, 0.1)
test2 <- c(0.1, 0.4, -0.1, -0.5, -0.3, -0.3, -0.4)
df <- data.frame(test, test2)
corrs <- c()
for (i in seq(1, 1000)) {
temp <- sample(seq(1, nrow(df)), replace = T)
temp_df <- df[temp, ]
corr <- cor(temp_df[, 1], temp_df[, 2])
corrs <- c(corrs, corr)
}
t.test(corrs, mu=0, alternative = "two.sided")
boot(df, cor, 1000)
install.packages("boot",dep=TRUE)
library(boot)
install.packages("boot",dep=TRUE)
boot(df, cor, 1000)
boot(data = df, corr, 1000)
corr <- function(d, i){
d2 <- d[i,]
return(cor(d2$write, d2$math))
}
boot(data = df, corr, 1000)
boot(data = matrix(df), corr, 1000)
corr <- function(d, i){
d2 <- d[i,]
return(cor(d2$test, d2$test2))
}
boot(data = df, corr, 1000)
boots <- boot(data = df, corr, 1000)
mean(boots$t) - boot$0
mean(boots$t) - boots$0
mean(boots$t) - boots$t0
boots$t0
boots$t
sd(boots$t)
boots
hist(boots)
hist(boots$t)
summary(boots)
summary(boots$t)
boot.ci(boot.out = boots, type = c("norm"))
mean(boots$t)
sd(boost$t)
sd(boots$t)
sd(corrs)
mean(corrs)
mean(corrs)/(0.3783149/sqrt(length(corrs)))
confint(corrs)
quantile(corrs)
mean(abs(boots$t0) < abs(boots$t-mean(boots$t)))
abs(boots$t-mean(boots$t)))
abs(boots$t-mean(boots$t)))
abs(boots$t-mean(boots$t))
mean(abs(boots$t-mean(boots$t)) >= 0)
quantile(corrs, c(0.025, 0.975))
setwd(~/Downloads)
getwd()
require(Biostrings)
dna <- readDNAStringSet("sequence.fasta")
require(Biostrings)
require(seqtool)
dna <- readDNAStringSet("sequence.fasta")
require(Biostrings)
install.packages('Xvector')
install.packages('Biostrings')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Biostrings")
require(Biostrings)
dna <- readDNAStringSet("sequence.fasta")
dna
mono <- oligonucleotideFrequency(dna,
width = 4,
step = 4,
as.prob = T,
with.labels = T)
mono
mono <- oligonucleotideFrequency(dna,
width = 4,
step = 4,
as.prob = F,
with.labels = T)
mono['TTTT']
mono
names(mono)
colnames(mono)
mono$AAAA
mono$'AAAA'
data.frame(mono)
str(mono)
mono["TTTT"]
mono["AAAA"]
test <- data.frame(mono)
dim(test)
test <- list(mono)
test
names(test)
test['AAAA']
mono
require(Biostrings)
dna <- readDNAStringSet("sequence.fasta")
mono <- oligonucleotideFrequency(dna,
width = 5,
step = 5,
as.prob = F,
with.labels = T)
mono
View(df)
View(mono)
log((10000 * ((1 - 0.0001) / 0.0001)), base=20)
log((200 * ((1 - 0.0001) / 0.0001)), base=20)
7/15
x <- c('Morganella', 'Blautia', 'Raoultella', 'Cellulosimicrobium',
'Campylobacter', 'Alloprevotella', 'Megasphaera', 'Bacteroides',
'Shewanella', 'Salmonella', 'Citrobacter', 'Cellulomonas',
'Stenotrophomonas', 'Oerskovia', 'Enterobacter', 'Cupriavidus',
'Rhodococcus', 'Clostridioides', 'Klebsiella', 'Pandoraea',
'Cronobacter')
y <- c('Bacillus', 'Burkholderia', 'Enterococcus', 'Aeromonas', 'Cronobacter',
'Cytomegalovirus', 'Lymphocryptovirus', 'Campylobacter', 'Pantoea',
'Shigella', 'Klebsiella', 'Cellulomonas', 'Salmonella', 'Shewanella',
'Megasphaera', 'Stenotrophomonas', 'Agrobacterium', 'Oerskovia',
'Prevotella', 'Escherichia', 'Blautia', 'Bacteroides', 'Enterobacter',
'Alphatorquevirus', 'Veillonella')
intersection(x, y)
intersect(x, y)
length(intersect(x, y))
devtools::install_github("elizagrames/litsearchr")
remotes::install_github("elizagrames/litsearchr", ref="main")
require(fs)
search()
remove.package("fs")
remove.packages("fs")
df <- data.frame(TT = c(65,320), TG = c(370, 110), GG = c(565, 70))
df
lapply(df,sum)
apply(df,2, sum)
apply(df,1, sum)
2 * 65 + 370
2* 565 +370
2*320 + 110
2* 70 +110
df
data.frame(T_allele = 2 * df$TT + df$TG, G_allele = 2 * df$GG + df$TG)
count_df <- data.frame(T_allele = 2 * df$TT + df$TG, G_allele = 2 * df$GG + df$TG)
count_df
df
rownames(df) = c("control", "cases")
df
count_df
rownames(count_df) <- c("control", "cases")
count_df <- t(count_df)
count_df
count_df <- count_df[, c("cases", "control")]
count_df
prop.table(count_df)
750 * 1000/3000
1250 / 3000 * 1000
1750 / 3000 * 1000
1250/3000 * 200
1250/3000 * 2000
17350/3000 * 2000
1750/3000 * 2000
chi.sq
?chisq.test()
2 **2
2^2
chi <- function(exp, obs) {
return((exp - obs) ^ 2 / exp)
}
count_df
chisq.test(count_df)
chisq.test(count_df,correct = F)
chisq.test(count_df, correct = F)
count_df
count_df <- count_df[, c("control", "cases")]
count_df
chi.sq(count_df, correct = F)
chisq.test(count_df, correct = F)
rm(list = ls())
df <- data.frame(TT = c(28, 167), TG = c(151, 238), GG = c(321, 95))
df
rownames(df) <- c("controls", "cases")
df
apply(df, 1, sum)
apply(df, 2, sum)
count_df <- data.frame(T_allele = 2 * df$TT + df$TG, G_allele = 2 * df$GG + df$TG)
count_df
2* 28 + 151
2 * 95 + 238
count_df
rownames(count_df) <- c("controls", "cases")
count_df
t(count_df)
count_df <- t(count_df)
count_df <- count_df[, c("cases", "controls")]
count_df
2 * 95 + 238
apply(count_df, 1, sum)
apply(count_df, 2, sum)
sum(apply(count_df, 1, sum))
779/2000 * 1000
chisq.test(count_df)
chisq.test(count_df, correct = F)
test <- chisq.test(count_df, correct = F)
summary(test)
test$expected
apply(test$expected, 1, sum)
summary(test)
test$residuals
summary(test)
chi <- function(exp, obs) {
return((exp - obs) ^ 2 / exp)
}
exp_df <- test$expected
count_df - exp_df
(exp_df - obs_df)^2 /exp_df
(exp_df - count_df)^2 /exp_df
(exp_df - count_df)
(exp_df - count_df)^2
(exp_df - count_df)^2 / exp_df
chi_df <- (exp_df - count_df)^2 / exp_df
chi_df
apply(chi_df, 1, sum)
apply(chi_df, 2, sum)
chi_df
sum(chi_df)
test$residuals
test
count_df
167 * 2 + 238
chi_df
count_df
exp_df
count_df - exp_df
count_df
exp_df
610.5 - 428
count_df
count_df[1, ] / count_df[2, ]
count_df[1, ] / count_df[2, ]
odds_df <- count_df[1, ] / count_df[2, ]
odds_df
odds_df$cases / odds_df$controls
odds_df$cases
odds_df
odds_df["cases"]
odds_df["cases"] / odds_df["controls"]
1.34 /0.26
1.336 /0.26
1.336 /0.261
sqrt(1/572 + 1/207 + 1/428 + 1/793)
odds_df["cases"] / odds_df["controls"]
OR <- odds_df["cases"] / odds_df["controls"]
LOR <- log(OR)
LOR
SE <- sqrt(1/572 + 1/207 + 1/428 + 1/793)
LOR + 1.96 * SE
LOR - 1.96 * SE
5.12 +- 1.96 * 0.10
5.12 + 1.96 * 0.10
OR
ln(5.12) + 1.96 * 0.1
log(5.12) + 1.96 * 0.1
log(e)
log(e1)
log(1e1)
log(1e)
log(1e1)
?log
LOR - 1.96 * SE
exp(LOR - 1.96 * SE)
exp(LOR + 1.96 * SE)
exp(1)
exp(1.83)
exp(1.4)
exp(1.44)
?t.test
pnorm
pnorm(1, mean = LOR, sd = SE)
pnorm(1, mean = LOR, sd = SE)
pt(1, mean = LOR, sd = SE)
?pt
count_df
count_df$controls / sum(count_df$controls)
count_df
count_df$controls
class(count_df)
count_df$controls / sum(count_df$controls)
count_df[, "controls"] / sum(count_df[, "controls"])
count_df
count_df[, "controls"] / sum(count_df[, "controls"])
count_df
df
TT_freq <- 0.207 ^ 2
TT_freq
TG_freq <- 2 * 0.207 * 0.793
GG_freq <- 0.793 ^ 2
GG_freq
0.793 * 0.793
df
count_df
df
0.793 * 0.793
TT_freq * 1000
count_df
TG_freq * 1000
GG_freq * 1000
obs <- c(28, 151, 321)
exp <- c(TT_freq, TG_freq, GG_freq) * 1000
exp
exp - obs
(exp - obs)^2 / exp
TT_freq
(exp - obs)^2 / exp
(exp - obs)^2 / exp
sum((exp - obs)^2 / exp)
exp
321 - 628.849
(321 - 628.849)^2 / 321
(321 - 628.849)^2 / 628.849
sum((exp - obs)^2 / exp)
chi_sq <- sum((exp - obs)^2 / exp)
pchisq(chi_sq, df=2, lower.tail=FALSE)
TT_freq <- 0.207 ^ 2
chi_sq <- sum((exp - obs)^2 / exp)
chi_sq
pchisq(chi_sq, df=2, lower.tail=FALSE)
count_df
df
sum(df[1, ])
exp <- c(TT_freq, TG_freq, GG_freq) * sum(obs)
obs <- c(28, 151, 321)
exp <- c(TT_freq, TG_freq, GG_freq) * sum(obs)
chi_sq <- sum((exp - obs)^2 / exp)
pchisq(chi_sq, df=2, lower.tail=FALSE)
chi_Sq
chi_sq
exp
chi_sq
chis <- (exp - obs)^2 / exp
chis <- (exp - obs)^2 / exp
chi_sq <- sum(chis)
chis
chi_sq
pchisq(chi_sq, df=2, lower.tail=FALSE)
exp(LOR + 1.96 * SE)
exp(LOR - 1.96 * SE)
pchisq(686, 1)
pchisq(686, 1, lower.tail = F)
0.4 / 100
84/1400 / 0.004
814 * 2 + 172
(814 * 2 + 172) / 2000
(760 * 2 + 215) / 2000
(25 * 2  + 215) / 2000
(14 * 2  + 172) / 2000
0.9 ^ 2 * 1000
0.9 * 0.1 * 1000
2 * 0.9 * 0.1 * 1000
0.1 * 0.1 * 1000
(65 - 63) ^ 2 / 63
# Control 1
obs <- c(814, 172, 14)
exp <- c(810, 180, 10)
sum(exp)
exp - obs
(exp - obs) ^ 2
(exp - obs) ^ 2 / exp
exp
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
chi_final
chisq.test(obs, exp, correct = F)
chisq.test(c(65, 370, 565), c(63, 375, 562), correct = F)
pchisq(0.146)
pchisq(0.146, df = 1)
pchisq(0.146, df = 2)
pchisq(0.146, df = 1)
pchisq(0.146, df = 1, lower.tail = F)
pchisq(chi_final, df = 1, lower.tail = F)
chi <- (exp - obs) ^ 2 / exp
# Control 1
obs <- c(814, 172, 14)
exp <- c(810, 180, 10)
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
chi
# Control 1
obs <- c(814, 172, 14)
exp <- c(810, 180, 10)
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
pchisq(chi_final, df = 1, lower.tail = F)
chi
chi_final
pchisq(chi_final, df = 1, lower.tail = F)
0.8675 ^2 * 1000
(760 * 2 + 215) / 2000
2 * 0.8675 * 0.1325 * 1000
0.1325 ^ 2 * 1000
exp <- c(752.5563, 229.8875, 17.55625)
# Control 2
obs <- c(760, 215, 25)
exp <- c(752.5563, 229.8875, 17.55625)
chi <- (exp - obs) ^ 2 / exp
chi_final <- sum(chi)
chi
chi_final
pchisq(chi_final, df = 1, lower.tail = F)
0.4 /100
84/1400/0.004
# Qn 7
df <- data.frame(AA = c(220, 814), AG = c(69, 172), GG = c(11, 14), row.names = c("case", "control"))
df
tibble(df)
lapply(df, sum)
chisq.test
chisq.test(df)
chisq.test(df, correct = F)
test <- chisq.test(df, correct = F)
test$statistic
test$observed
test$expected
round(test$expected, 2)
round(apply(test$expected, 1, sum), 2)
round(apply(test$expected, 2, sum), 2)
exp <- test$statistic
(exp - df)^2/exp
exp
exp <- test$expected
(exp - df)^2/exp
sum((exp - df)^2/exp)
(241/ (1034 + 25)) / (1034 / (241 + 25))
(25/ (1034 + 241)) / (1034 / (241 + 25))
69/220 / 172/814
(69/220) / (172/814)
(11/220) / (14/814)
1.48^2
10/100
0.8675 ^ 2 * 1000
1034/1300 * 300
(814 * 2 + 172) / 2000 = 0.9
(814 * 2 + 172) / 2000
814 +172 + 14
# Qn 7
df <- data.frame(AA = c(220, 814), AG = c(69, 172), GG = c(11, 14), row.names = c("case", "control"))
df
chisq.test(df)
chisq.test(df, correct = F)
setwd("../Desktop/year_3/BIOC0021/workspace/phylogeny_building/data/")
require("tidyverse")
require("datatable")
require("data.table")
df <- fread("anellovirus_n1143_201020.csv")
df
df %>%
group_by(Species)
df %>%
group_by(Species) %>%
summarise(n = n())
df %>%
group_by(Host) %>%
summarise(n = n())
df %>%
n_distinct(host)
df %>%
n_distinct(Host)
df %>%
n_distinct(Host)
df %>%
distinct(Host)
df %>%
group_by(Host) %>%
summarise(n = n_distinct())
df %>%
# group_by(Host) %>%
summarise(n = n_distinct())
df %>%
# group_by(Host) %>%
summarise(n = n_distinct())
df %>%
# group_by(Host) %>%
summarise(n = n_distinct(Host))
df <- fread("../../data/prevalence_estimates.csv")
df
df %>%
summarise(n = n_distinct(reference))
df %>%
filter(!is.na(ttv)) %>%
summarise(n = n_distinct(reference))
df %>%
filter(!is.na(ttv))
df %>%
filter(!is.na(ttv)) %>%
summarise(range = range(ttv))
df %>%
filter(!is.na(ttv))
